from datetime import datetime

from aiogram import types
from aiogram.dispatcher import FSMContext

from buttons.users.main import main
from context.context import LoyalRegister
from config import dp, db, generate_number
from buttons.users.carta_loyal import loyal_markup, carta_loyal


@dp.message_handler(text='üí≥ –ö–∞—Ä—Ç–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏')
async def start_loyal(message: types.Message):
    check_user = db.fetchone("SELECT id FROM users WHERE id = ?", (message.from_user.id,))
    if not check_user:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–π –∏ –≤—ã–≥–æ–¥! –†–∞–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –Ω–∞—à—É –∫–∞—Ä—Ç—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ "
                             "‚Äì –≤–æ–ª—à–µ–±–Ω—ã–π –±–∏–ª–µ—Ç –≤ –º–∏—Ä –≤–∫—É—Å–∞ –∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π. –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –Ω–∞—à–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –≤—ã "
                             "–ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–π –æ–ø—ã—Ç –≥–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π, –Ω–æ –∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –Ω–∞ "
                             "–∫–∞–∂–¥–æ–º —à–∞–≥—É.\n\n"
                             "üåü –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–∞—à–µ–π –∫–∞—Ä—Ç—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏: \n\n"
                             "5% —Å–∫–∏–¥–∫–∏ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç –æ—Ç 5000 —Ä—É–± ..–î–∞–ª–µ–µ –∫–∞–∫ –≤–∞—à–∞ —Ü–µ–ª—å –¥–æ—Å—Ç–∏–≥–∞–µ—Ç 40000 —Ä—É–± ,"
                             " –≤–∞—à–∏ —Å–∫–∏–¥–∫–∞ –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç –æ—Ç 5000 —Ä—É–± –±—É–¥–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å 10%\n\n"
                             "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –Ω–∞—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –∞–∫—Ü–∏–π, "
                             "–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –æ–±–ª–∞–¥–∞—Ç–µ–ª—è–º –∫–∞—Ä—Ç—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏. –ü–µ—Ä–≤—ã–º–∏ —É–∑–Ω–∞–≤–∞–π—Ç–µ –æ –Ω–æ–≤—ã—Ö –±–ª—é–¥–∞—Ö, "
                             "–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ —É–∂–∏–Ω–∞—Ö –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º.\n\n"
                             "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å. –ú—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –∫–∞–∂–¥–æ–º –≥–æ—Å—Ç–µ. –ö–∞—Ä—Ç–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º "
                             "–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –≤–∞–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ –≤–∞—à–µ–º—É –æ–ø—ã—Ç—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è —Å "
                             "–æ—Å–æ–±—ã–º –≤–Ω–∏–º–∞–Ω–∏–µ–º.\n\n"
                             "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∫–ª—É–±—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∏ –¥–∞—Ä–∏—Ç–µ —Å–µ–±–µ –º–æ–º–µ–Ω—Ç—ã —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è, –∞ –Ω–∞–º ‚Äì "
                             "–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏ –ª—É—á—à–∏–º –∏–∑ —Ç–æ–≥–æ, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å. –ñ–¥–µ–º –≤–∞—Å –≤ –Ω–∞—à–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ! "
                             "üçΩ", reply_markup=loyal_markup())
    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=carta_loyal())


@dp.message_handler(text="üí≥ –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞")
async def virt_cart(message: types.Message):
    cart_number = db.fetchone("SELECT entry_number FROM users WHERE id = ?", (message.from_user.id,))
    await message.answer(f"<b>–ü—Ä–æ–¥–∏–∫—Ç—É–π—Ç–µ –¥–∞–Ω–Ω—ã–π –∫–æ–¥ –º–µ–Ω–µ–¥–∂–µ—Ä—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞</b> \n(–≤–º–µ—Å—Ç–µ —Å –¥–µ—Ñ–∏—Å–æ–º, –æ–Ω –≤–∞–∂–µ–Ω)\n"
                         f"\n"
                         f"<b>{cart_number[0]}</b>", parse_mode="HTML")


@dp.message_handler(text="üëõ–ë–∞–ª–∞–Ω—Å")
async def sum_money_user(message: types.Message):
    balance = db.fetchone("SELECT balance FROM users WHERE id = ?", (message.from_user.id,))
    await message.answer(f"–ë–∞–ª–∞–Ω—Å –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç <b>{balance[0]} —Ä—É–±</b>", parse_mode="HTML")


@dp.message_handler(text="üë§ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
async def register_user(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è")
    await state.set_state(LoyalRegister.name)


@dp.message_handler(state=LoyalRegister.name)
async def register_user(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é", reply_markup=types.ReplyKeyboardRemove())
        await state.set_state(LoyalRegister.lastname)


@dp.message_handler(state=LoyalRegister.lastname)
async def register_lastname(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['lastname'] = message.text
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä:\n"
                             "\n"
                             "–í —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (89123456789)")
        await state.set_state(LoyalRegister.phone_number)


@dp.message_handler(state=LoyalRegister.phone_number)
async def register_birthday(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['phone_number'] = message.text
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥ \n"
                             "(–ù–∞–ø—Ä–∏–º–µ—Ä: 31.01.1999).")
        await state.set_state(LoyalRegister.birthday)


@dp.message_handler(state=LoyalRegister.birthday)
async def register_phone_number(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        date_obj = datetime.strptime(message.text, "%d.%m.%Y")
        entry_number = await generate_number()
        db.query(
            f"INSERT INTO users (id, name, lastname, birthday, phone_number, entry_number, balance) VALUES (?, ?, ?, ?, ?, ?, ?)",
            (message.from_user.id, data['name'], data['lastname'], date_obj,
             data['phone_number'], entry_number, 0.0))
        await message.answer("–ü—Ä–∏–Ω—è—Ç–æ", reply_markup=main())
        await state.finish()


@dp.message_handler(text="üîô –ù–∞–∑–∞–¥")
async def register_back(message: types.Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main())
